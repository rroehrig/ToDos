// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToDo renders a completed task correctly in a snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <TouchableHighlight
    activeOpacity={0.85}
    onPress={[Function]}
    style={
        Object {
            "backgroundColor": "white",
            "borderColor": "gray",
            "borderRadius": 5,
            "borderWidth": 2,
            "height": 60,
            "justifyContent": "center",
            "marginVertical": 5,
          }
    }
    underlayColor="white"
>
    <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
            Array [
                Object {
                  "fontSize": 20,
                  "paddingHorizontal": 15,
                },
                Object {
                  "textDecorationLine": "line-through",
                },
              ]
        }
    >
         my completed Task 
    </Text>
</TouchableHighlight>,
  "nodes": Array [
    <TouchableHighlight
      activeOpacity={0.85}
      onPress={[Function]}
      style={
            Object {
                  "backgroundColor": "white",
                  "borderColor": "gray",
                  "borderRadius": 5,
                  "borderWidth": 2,
                  "height": 60,
                  "justifyContent": "center",
                  "marginVertical": 5,
                }
      }
      underlayColor="white"
>
      <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                  Array [
                        Object {
                          "fontSize": 20,
                          "paddingHorizontal": 15,
                        },
                        Object {
                          "textDecorationLine": "line-through",
                        },
                      ]
            }
      >
             my completed Task 
      </Text>
</TouchableHighlight>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ToDo
        completed={true}
        onPress={[Function]}
>
         my completed Task 
</ToDo>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": " my completed Task ",
          "completed": true,
          "onPress": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <TouchableHighlight
          activeOpacity={0.85}
          onPress={[Function]}
          style={
                    Object {
                              "backgroundColor": "white",
                              "borderColor": "gray",
                              "borderRadius": 5,
                              "borderWidth": 2,
                              "height": 60,
                              "justifyContent": "center",
                              "marginVertical": 5,
                            }
          }
          underlayColor="white"
>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Array [
                                        Object {
                                          "fontSize": 20,
                                          "paddingHorizontal": 15,
                                        },
                                        Object {
                                          "textDecorationLine": "line-through",
                                        },
                                      ]
                    }
          >
                     my completed Task 
          </Text>
</TouchableHighlight>,
        "_debugID": 2,
        "_renderedOutput": <TouchableHighlight
          activeOpacity={0.85}
          onPress={[Function]}
          style={
                    Object {
                              "backgroundColor": "white",
                              "borderColor": "gray",
                              "borderRadius": 5,
                              "borderWidth": 2,
                              "height": 60,
                              "justifyContent": "center",
                              "marginVertical": 5,
                            }
          }
          underlayColor="white"
>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Array [
                                        Object {
                                          "fontSize": 20,
                                          "paddingHorizontal": 15,
                                        },
                                        Object {
                                          "textDecorationLine": "line-through",
                                        },
                                      ]
                    }
          >
                     my completed Task 
          </Text>
</TouchableHighlight>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ToDo
    completed={true}
    onPress={[Function]}
>
     my completed Task 
</ToDo>,
}
`;

exports[`ToDo renders a completed task correctly in a snapshot 2`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <TouchableHighlight
    activeOpacity={0.85}
    onPress={[Function]}
    style={
        Object {
            "backgroundColor": "white",
            "borderColor": "gray",
            "borderRadius": 5,
            "borderWidth": 2,
            "height": 60,
            "justifyContent": "center",
            "marginVertical": 5,
          }
    }
    underlayColor="white"
>
    <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
            Array [
                Object {
                  "fontSize": 20,
                  "paddingHorizontal": 15,
                },
                Object {
                  "textDecorationLine": "none",
                },
              ]
        }
    >
        my uncompleted Task
    </Text>
</TouchableHighlight>,
  "nodes": Array [
    <TouchableHighlight
      activeOpacity={0.85}
      onPress={[Function]}
      style={
            Object {
                  "backgroundColor": "white",
                  "borderColor": "gray",
                  "borderRadius": 5,
                  "borderWidth": 2,
                  "height": 60,
                  "justifyContent": "center",
                  "marginVertical": 5,
                }
      }
      underlayColor="white"
>
      <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                  Array [
                        Object {
                          "fontSize": 20,
                          "paddingHorizontal": 15,
                        },
                        Object {
                          "textDecorationLine": "none",
                        },
                      ]
            }
      >
            my uncompleted Task
      </Text>
</TouchableHighlight>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ToDo
        completed={false}
        onPress={[Function]}
>
        my uncompleted Task
</ToDo>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": "my uncompleted Task",
          "completed": false,
          "onPress": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <TouchableHighlight
          activeOpacity={0.85}
          onPress={[Function]}
          style={
                    Object {
                              "backgroundColor": "white",
                              "borderColor": "gray",
                              "borderRadius": 5,
                              "borderWidth": 2,
                              "height": 60,
                              "justifyContent": "center",
                              "marginVertical": 5,
                            }
          }
          underlayColor="white"
>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Array [
                                        Object {
                                          "fontSize": 20,
                                          "paddingHorizontal": 15,
                                        },
                                        Object {
                                          "textDecorationLine": "none",
                                        },
                                      ]
                    }
          >
                    my uncompleted Task
          </Text>
</TouchableHighlight>,
        "_debugID": 4,
        "_renderedOutput": <TouchableHighlight
          activeOpacity={0.85}
          onPress={[Function]}
          style={
                    Object {
                              "backgroundColor": "white",
                              "borderColor": "gray",
                              "borderRadius": 5,
                              "borderWidth": 2,
                              "height": 60,
                              "justifyContent": "center",
                              "marginVertical": 5,
                            }
          }
          underlayColor="white"
>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Array [
                                        Object {
                                          "fontSize": 20,
                                          "paddingHorizontal": 15,
                                        },
                                        Object {
                                          "textDecorationLine": "none",
                                        },
                                      ]
                    }
          >
                    my uncompleted Task
          </Text>
</TouchableHighlight>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ToDo
    completed={false}
    onPress={[Function]}
>
    my uncompleted Task
</ToDo>,
}
`;
